service: home-mta-status # NOTE: Don't put the word "google" in here

provider:
  name: google
  runtime: nodejs
  timeout: 240s
  project: home-mta-status
  # the path to the credentials file needs to be absolute
  credentials: ~/.gcloud/Google Home MTA Status-keys.json

  # 12/13/17 NOTE: Google Cloud Functions does not support environment vairables 
  environment:
    firebase_credentials: ./keys/home-mta-status-firebase-adminsdk-key.json  
    firebase_db_url: https://home-mta-status.firebaseio.com
    stage: ${opt:stage, self:custom.defaultStage}
    googleMapsAPIurl: https://maps.googleapis.com/maps/api/geocode/json
    googleMapsDistanceAPIurl: https://maps.googleapis.com/maps/api/distancematrix/json?mode=walking&units=imperial
    googleMapsAPIkey: ${file(./serverless.keys.yml):${self:provider.stage}.googleMapsAPIkey}
    mtaAPIURL: http://datamine.mta.info/mta_esi.php
    mtaAPIkey: ${file(./serverless.keys.yml):${self:provider.stage}.mtaAPIkey}

plugins:
  - serverless-google-cloudfunctions

custom:
  defaultStage: dev

# needs more granular excluding in production as only the serverless provider npm
# package should be excluded (and not the whole node_modules directory)
package:
  exclude:
    - node_modules/**
    - .gitignore
    - .git/**

functions:
  first:
    handler: mtaStatus
    timeout: 120s
    events:
      - http: path

  # NOTE: the following uses an "event" event (pubSub event in this case).
  # Please create the corresponding resources in the Google Cloud
  # before deploying this service through Serverless

  #second:
  #  handler: event
  #  events:
  #    - event:
  #        eventType: providers/cloud.pubsub/eventTypes/topic.publish
  #        resource: projects/*/topics/my-topic

# you can define resources, templates etc. the same way you would in a
# Google Cloud deployment configuration
#resources:
#  resources:
#    - type: storage.v1.bucket
#      name: my-serverless-service-bucket
#  imports:
#    - path: my_template.jinja
